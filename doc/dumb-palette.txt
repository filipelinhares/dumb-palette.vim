*dumb-palette*	Easy and dumb command palette in Vim

Version: 0.0.2
Author : Filipe Linhares (https://github.com/filipelinhares)
License: MIT license

CONTENTS 					*dumb-contents*

Introduction···············|dumb-introduction|
Usage······················|dumb-usage|
Commands···················|dumb-commands|
Key mappings···············|dumb-key-mappings|
Configuration··············|dumb-configuration|

==============================================================================
INTRODUCTION 					*dumb-introduction*

*dumb-palette* is a customizable command palette for Vim.

==============================================================================
USAGE 						*dumb-usage*

Set up g:dumb_commands and hit <leader>o, or change the key (*dumb-key-mappings*)

==============================================================================
COMMANDS 					*dumb-commands*

:DumbOpen 
	Open the popup with the option set in g:dumb_commands.

:DumbClose 
	Close the dumb palette popup.
------------------------------------------------------------------------------
VARIABLES 					*dumb-variables*

*g:dumb_commands*  (required)

	Allowed inner properties:
	- func<string> - Execute a function you've created.
	- command<string> - Run a Vim command.

	Define the commands to show inside popup, eg:

	function! FunctionName(selected)
		" Print the selected option, eg: {'text': 'With function', 'func': 'FunctionName' }
		echo a:selected
	endfunction

	let dumb_commands = [
		\ {'text': 'With function', 'func': 'FunctionName' },
		\ {'text': 'Package Install', 'command': 'PlugInstall' },
		\ ]

	You can add custom properties to use inside the function, eg:

	let dumb_commands = [
		\ {'text': 'Copy file name', 'type': 'filename', 'func': 'ClipboardFilter' },
		\ {'text': 'Copy project path', 'type': 'filename-project', 'func': 'ClipboardFilter' },
		\ ]

	func ClipboardFilter(option)
		if a:option.type == 'filename'
			let @* = expand('%:t')
		endif

		if a:option.type == 'filename-project'
			let @* = expand('%:p')
		endif
	endfunc

------------------------------------------------------------------------------
KEY MAPPINGS 					*dumb-key-mappings*

Normal mode default mappings.
-------------------------------------
<leader>o :DumbOpen
-------------------------------------

Remap eg:
	nmap <leader>p :call :DumbOpen()<CR>
------------------------------------------------------------------------------
CONFIGURATION 						*dumb-configuration*

*dumb_commands* 
	A list of dicts with commands to execute, eg:

	function LogTest()
		echo 'Hello!'
	endfunction

	let dumb_commands = [
			\ {'text': 'CallFunction', 'func': 'LogTest' },
			\ {'text': 'Package Install', 'command': 'PlugInstall' },
			\ ]

If you use 'func' the function must be avaiable in the current scope.

*g:dumb_no_maps*
	Disable key mapping

==============================================================================

